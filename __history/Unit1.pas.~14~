unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Menus, Vcl.ExtCtrls,
  Vcl.ComCtrls, Vcl.MPlayer, mmsystem;

type
  TForm1 = class(TForm)
    MainMenu1: TMainMenu;
    N1: TMenuItem;
    Timer1: TTimer;
    Timer2: TTimer;
    StatusBar1: TStatusBar;
    MediaPlayer1: TMediaPlayer;
    N2: TMenuItem;
    N3: TMenuItem;
    N4: TMenuItem;
    N5: TMenuItem;
    N6: TMenuItem;
    N7: TMenuItem;
    N8: TMenuItem;
    procedure Game_Preparation;
    procedure Main(x, y: integer);
    procedure Main2(x, y: integer);
    procedure FormMouseMove(Sender: TObject; Shift: TShiftState; x, y: integer);
    procedure New_Game;
    procedure Timer1Timer(Sender: TObject);
    procedure Meteorit(x, y, z: integer);
    procedure Timer2Timer(Sender: TObject);
    procedure FormMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; x, y: integer);
    procedure Shot(x, y: integer);
    function Shot_Check(x, y: integer): Boolean;
    procedure Bang(x, y: integer);
    procedure Destroy(x, y, z, q, w: integer);
    function Meteorit_Check(x, y, z: integer): Boolean;
    function MainCheck(x, y: integer): Boolean;
    procedure Game_Over;
    procedure FormCreate(Sender: TObject);
    procedure N1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    bitmap: Vcl.Graphics.TBitmap;
    X_Main, Y_Main: integer;
    All_Array: array [Byte, 0 .. 5] of integer;
    i: integer;
    X_Shot, Y_Shot: integer;
    score: integer;
    X_ShotClick, Y_ShotClick: integer;
    Lvl_Main: Byte;
    Lvl_Game: Byte;

  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Main(x, y: integer);
begin
  Form1.Canvas.CopyRect(rect(x - 50, y - 50, x + 50, y + 50), bitmap.Canvas,
    rect(0, 0, 100, 100));
end;

procedure TForm1.Main2(x, y: integer);
begin
  Form1.Canvas.CopyRect(rect(x - 50, y - 50, x + 50, y + 50), bitmap.Canvas,
    rect(0, 400, 100, 500));
end;

procedure TForm1.N1Click(Sender: TObject);
begin
  New_Game;
end;

procedure TForm1.New_Game;
var
  CState, a: integer;
begin
  if i = 0 then
    Game_Preparation;
  Form1.OnMouseMove := FormMouseMove;
  Form1.OnMouseDown := FormMouseDown;
  Timer1.Enabled := true;
  Timer2.Enabled := true;
  MediaPlayer1.FileName :=
    'C:\Users\Demo\Desktop\Работа\Программирование relese\Delphi\Космический шутер\game_43.fasset_.mp3';
  MediaPlayer1.Open;
  MediaPlayer1.Play;
  i := 0;
  X_Shot := -1;
  Y_Shot := -1;
  score:=0;

  CState := ShowCursor(true);
  while CState >= 0 do
    CState := ShowCursor(False);

  for a := 0 to i do
    All_Array[a, 0] := 90;

end;

procedure TForm1.Timer1Timer(Sender: TObject);
var
  a: integer;
begin
  Refresh;
  // Lvl_Main := 1;
  if Lvl_Main = 0 then

    Main(X_Main, Y_Main)
  else
    Main2(X_Main, Y_Main);

  if X_ShotClick > 0 then
  begin
    { if (score > 50) then
      for a := 0 to i do
      begin
      if All_Array[a, 0] = 90 then
      begin
      All_Array[a, 0] := 2;
      All_Array[a, 1] := X_ShotClick;
      All_Array[a, 2] := Y_ShotClick;
      All_Array[a, 3] := 1;
      break;
      end;
      end
      else }

    All_Array[i, 0] := 2;
    All_Array[i, 1] := X_ShotClick;
    All_Array[i, 2] := Y_ShotClick;
    All_Array[i, 3] := 1;

    if Lvl_Main > 0 then
    begin
      inc(i);
      All_Array[i, 0] := 2;
      All_Array[i, 1] := X_ShotClick - 40;
      All_Array[i, 2] := Y_ShotClick + 40;
      All_Array[i, 3] := 1;
      inc(i);
      All_Array[i, 0] := 2;
      All_Array[i, 1] := X_ShotClick + 40;
      All_Array[i, 2] := Y_ShotClick + 40;
      All_Array[i, 3] := 1;

    end;

    inc(i);
    X_ShotClick := -1;
  end;

  for a := 0 to i do
  begin
    case All_Array[a, 0] of
      1:
        begin
          if ((All_Array[a, 1] - All_Array[a, 3] < X_Shot) and
            (X_Shot < All_Array[a, 1] + All_Array[a, 3])) and
            ((All_Array[a, 2] - All_Array[a, 3] < Y_Shot) and
            (Y_Shot < All_Array[a, 2] + All_Array[a, 3])) then
          begin
            All_Array[a, 0] := 90;
            Destroy(All_Array[a, 1], All_Array[a, 2], All_Array[a, 3],
              All_Array[a, 4], All_Array[a, 5]);
            X_Shot := -1;
            Y_Shot := -1;
          end;
          { if Meteorit_Check(All_Array[a, 1], All_Array[a, 2], All_Array[a, 3])
            then
            begin
            All_Array[a, 4] := 1;
            All_Array[a, 5] := 1;
            end; }

          if All_Array[a, 4] = 0 then
            All_Array[a, 1] := All_Array[a, 1] + 5
          else
            All_Array[a, 1] := All_Array[a, 1] - 5;
          if All_Array[a, 5] = 0 then
            All_Array[a, 2] := All_Array[a, 2] + 5
          else
            All_Array[a, 2] := All_Array[a, 2] - 5;

          if All_Array[a, 1] >= ClientWidth - All_Array[a, 3] then
            All_Array[a, 4] := 1
          else if All_Array[a, 1] < 0 + All_Array[a, 3] then
            All_Array[a, 4] := 0;

          if All_Array[a, 2] >= ClientHeight - All_Array[a, 3] then
            All_Array[a, 5] := 1
          else if All_Array[a, 2] <= 0 - All_Array[a, 3] then
            All_Array[a, 5] := 0;

          Meteorit(All_Array[a, 1], All_Array[a, 2], All_Array[a, 3]);

          if MainCheck(X_Main, Y_Main) then
            Game_Over;

        end;

      2:
        begin
         { if All_Array[a, 2] > Height then
            All_Array[a, 3] := 0
        else if All_Array[a, 2] < 0 then
          All_Array[a, 3] := 1;
                                }
      if Shot_Check(All_Array[a, 1] - 12, All_Array[a, 2] + 50) then
      begin
        All_Array[a, 0] := 99;
        X_Shot := All_Array[a, 1] - 12;
        Y_Shot := All_Array[a, 2] + 50;
      end
      else if All_Array[a, 3] = 0 then
        All_Array[a, 2] := All_Array[a, 2] + 50
      else
        All_Array[a, 2] := All_Array[a, 2] - 50;
      Shot(All_Array[a, 1], All_Array[a, 2]);

      end;

      99:
        begin
          Bang(All_Array[a, 1], All_Array[a, 2]);
          All_Array[a, 0] := 90;
        end;

    end;
    StatusBar1.Panels[0].Text := 'Очки: ' + inttostr(score);

  end;

end;

procedure TForm1.Timer2Timer(Sender: TObject);
begin
  All_Array[i, 0] := 1;
  All_Array[i, 1] := random(screen.Width - 100) + 50;
  All_Array[i, 2] := 50;
  All_Array[i, 3] := random(100) + 25;
  All_Array[i, 4] := random(2);
  All_Array[i, 5] := 0;
  inc(i);
end;

procedure TForm1.Meteorit(x, y, z: integer);
begin
  Form1.Canvas.CopyRect(rect(x - z, y - z, x + z, y + z), bitmap.Canvas,
    rect(0, 101, 100, 200));
end;

procedure TForm1.Shot(x, y: integer);
begin
  Form1.Canvas.CopyRect(rect(x - 12, y + 50, x + 12, y - 40), bitmap.Canvas,
    rect(0, 201, 25, 291));
end;

function TForm1.Shot_Check(x, y: integer): Boolean;
var
  x_p, y_p: integer;
begin
  x_p := x;
  y_p := y + 1;
  if Form1.Canvas.Pixels[x_p, y_p] = clOlive then
  begin
    result := true;
    PlaySound(
      'C:\Users\Demo\Desktop\Работа\Программирование relese\Delphi\Космический шутер\lazer.wav',
      HInstance, SND_ASYNC);
  end
  else
    result := False;
end;

procedure TForm1.Bang(x, y: integer);
begin
  Form1.Canvas.CopyRect(rect(x - 50, y - 50, x + 50, y + 50), bitmap.Canvas,
    rect(0, 300, 100, 400));
  score := score + 5;
end;

function TForm1.Meteorit_Check(x, y, z: integer): Boolean;
begin
  if Form1.Canvas.Pixels[x - z, y - z - 1] or Form1.Canvas.Pixels[x, y - z - 1]
    or Form1.Canvas.Pixels[x + z, y - z - 1] or Form1.Canvas.Pixels
    [x + z + 1, y - z] or Form1.Canvas.Pixels[x + z + 1, y] or
    Form1.Canvas.Pixels[x + z + 1, y + z] or Form1.Canvas.Pixels
    [x + z, y + z + 1] or Form1.Canvas.Pixels[x, y + z + 1] or
    Form1.Canvas.Pixels[x - z, y + z + 1] or Form1.Canvas.Pixels
    [x - z - 1, y + z] or Form1.Canvas.Pixels[x - z - 1, y] or
    Form1.Canvas.Pixels[x - z - 1, y - z] = clOlive then
    result := true
  else
    result := False;

end;

function TForm1.MainCheck(x, y: integer): Boolean;
begin
  if (Form1.Canvas.Pixels[x, y - 45] = clOlive) or
    (Form1.Canvas.Pixels[x, y + 45] = clOlive) or
    (Form1.Canvas.Pixels[x - 45, y] = clOlive) or
    (Form1.Canvas.Pixels[x + 45, y] = clOlive) then
    result := true
  else
    result := False;
end;

procedure TForm1.Game_Over;
var
  CState: integer;
begin
  Timer1.Enabled := False;
  Timer2.Enabled := False;
  // ShowMessage('Game Over!');
  MediaPlayer1.FileName :=
    'C:\Users\Demo\Desktop\Работа\Программирование relese\Delphi\Космический шутер\menu_26.fasset_.mp3';
  MediaPlayer1.Open;
  MediaPlayer1.Play;
  PlaySound(
    'C:\Users\Demo\Desktop\Работа\Программирование relese\Delphi\Космический шутер\Lose.wav',
    HInstance, SND_ASYNC);

  CState := ShowCursor(true);
  while CState < 0 do
    CState := ShowCursor(true);
end;

procedure TForm1.Destroy(x, y, z, q, w: integer);
begin
  if z div 2 > 40 then
  begin
    All_Array[i, 0] := 1;
    All_Array[i, 1] := x - z;
    All_Array[i, 2] := y - z div 2;
    All_Array[i, 3] := z div 2;
    All_Array[i, 4] := q;
    All_Array[i, 5] := w;
    inc(i);
    All_Array[i, 0] := 1;
    All_Array[i, 1] := x + z;
    All_Array[i, 2] := y + z div 2;
    All_Array[i, 3] := z div 2;
    All_Array[i, 4] := q;
    All_Array[i, 5] := w;
    inc(i);
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  MediaPlayer1.Play;
  StatusBar1.top := ClientHeight;
  StatusBar1.Left := 0;
end;

procedure TForm1.FormMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; x, y: integer);
begin
  X_ShotClick := x;
  Y_ShotClick := y;

end;

procedure TForm1.FormMouseMove(Sender: TObject; Shift: TShiftState;
  x, y: integer);
begin
  X_Main := x;
  Y_Main := y;
end;

procedure TForm1.Game_Preparation;
begin
  bitmap := TBitmap.Create;
  bitmap.Width := screen.Width;
  bitmap.Height := screen.Height;
  Refresh;
  // корабль
  Form1.Canvas.Pen.Color := clBlack;
  Form1.Canvas.Brush.Color := clBtnFace;
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.MoveTo(515, 501);
  Form1.Canvas.LineTo(514, 335);
  Form1.Canvas.MoveTo(514, 335);
  Form1.Canvas.LineTo(550, 291);
  Form1.Canvas.MoveTo(550, 291);
  Form1.Canvas.LineTo(591, 290);
  Form1.Canvas.MoveTo(591, 290);
  Form1.Canvas.LineTo(610, 265);
  Form1.Canvas.MoveTo(610, 265);
  Form1.Canvas.LineTo(625, 264);
  Form1.Canvas.MoveTo(625, 264);
  Form1.Canvas.LineTo(656, 220);
  Form1.Canvas.MoveTo(656, 220);
  Form1.Canvas.LineTo(657, 204);
  Form1.Canvas.MoveTo(657, 204);
  Form1.Canvas.LineTo(681, 180);
  Form1.Canvas.MoveTo(681, 180);
  Form1.Canvas.LineTo(682, 179);
  Form1.Canvas.MoveTo(681, 178);
  Form1.Canvas.LineTo(681, 143);
  Form1.Canvas.MoveTo(681, 143);
  Form1.Canvas.LineTo(722, 98);
  Form1.Canvas.MoveTo(722, 98);
  Form1.Canvas.LineTo(766, 144);
  Form1.Canvas.MoveTo(766, 144);
  Form1.Canvas.LineTo(765, 182);
  Form1.Canvas.MoveTo(765, 182);
  Form1.Canvas.LineTo(791, 206);
  Form1.Canvas.MoveTo(791, 206);
  Form1.Canvas.LineTo(791, 227);
  Form1.Canvas.MoveTo(791, 227);
  Form1.Canvas.LineTo(825, 268);
  Form1.Canvas.MoveTo(825, 268);
  Form1.Canvas.LineTo(839, 267);
  Form1.Canvas.MoveTo(839, 267);
  Form1.Canvas.LineTo(856, 295);
  Form1.Canvas.MoveTo(856, 295);
  Form1.Canvas.LineTo(900, 294);
  Form1.Canvas.MoveTo(900, 294);
  Form1.Canvas.LineTo(932, 338);
  Form1.Canvas.MoveTo(932, 338);
  Form1.Canvas.LineTo(933, 501);
  Form1.Canvas.MoveTo(931, 482);
  Form1.Canvas.LineTo(903, 481);
  Form1.Canvas.MoveTo(903, 481);
  Form1.Canvas.LineTo(872, 410);
  Form1.Canvas.MoveTo(872, 410);
  Form1.Canvas.LineTo(831, 410);
  Form1.Canvas.MoveTo(831, 410);
  Form1.Canvas.LineTo(820, 425);
  Form1.Canvas.MoveTo(820, 425);
  Form1.Canvas.LineTo(777, 425);
  Form1.Canvas.MoveTo(777, 425);
  Form1.Canvas.LineTo(768, 410);
  Form1.Canvas.MoveTo(768, 410);
  Form1.Canvas.LineTo(754, 411);
  Form1.Canvas.MoveTo(754, 411);
  Form1.Canvas.LineTo(732, 440);
  Form1.Canvas.MoveTo(732, 440);
  Form1.Canvas.LineTo(719, 439);
  Form1.Canvas.MoveTo(719, 439);
  Form1.Canvas.LineTo(695, 413);
  Form1.Canvas.MoveTo(695, 413);
  Form1.Canvas.LineTo(679, 413);
  Form1.Canvas.MoveTo(679, 413);
  Form1.Canvas.LineTo(664, 427);
  Form1.Canvas.MoveTo(664, 427);
  Form1.Canvas.LineTo(623, 427);
  Form1.Canvas.MoveTo(623, 427);
  Form1.Canvas.LineTo(611, 411);
  Form1.Canvas.MoveTo(611, 411);
  Form1.Canvas.LineTo(575, 412);
  Form1.Canvas.MoveTo(575, 412);
  Form1.Canvas.LineTo(541, 483);
  Form1.Canvas.MoveTo(541, 483);
  Form1.Canvas.LineTo(520, 483);
  Form1.Canvas.Brush.Color := clBlack;
  Form1.Canvas.Rectangle(629, 424, 664, 480);
  Form1.Canvas.Rectangle(784, 427, 819, 480);
  Form1.Canvas.Pen.Width := 5;
  Form1.Canvas.Pen.Color := clMaroon;
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.MoveTo(618, 463);
  Form1.Canvas.LineTo(677, 463);
  Form1.Canvas.MoveTo(677, 463);
  Form1.Canvas.LineTo(655, 553);
  Form1.Canvas.MoveTo(655, 553);
  Form1.Canvas.LineTo(619, 464);
  Form1.Canvas.FloodFill(646, 491, clMaroon, fsBorder);
  Form1.Canvas.Pen.Color := clRed;
  Form1.Canvas.Brush.Color := clRed;
  Form1.Canvas.MoveTo(630, 472);
  Form1.Canvas.LineTo(668, 472);
  Form1.Canvas.MoveTo(668, 472);
  Form1.Canvas.LineTo(655, 537);
  Form1.Canvas.MoveTo(655, 537);
  Form1.Canvas.LineTo(631, 472);
  Form1.Canvas.FloodFill(648, 493, clRed, fsBorder);
  Form1.Canvas.Pen.Color := clYellow;
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.MoveTo(638, 478);
  Form1.Canvas.LineTo(661, 478);
  Form1.Canvas.MoveTo(661, 478);
  Form1.Canvas.LineTo(655, 514);
  Form1.Canvas.MoveTo(655, 514);
  Form1.Canvas.LineTo(639, 479);
  Form1.Canvas.FloodFill(654, 489, clYellow, fsBorder);
  Form1.Canvas.Pen.Color := clMaroon;
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.MoveTo(772, 461);
  Form1.Canvas.LineTo(830, 461);
  Form1.Canvas.MoveTo(830, 461);
  Form1.Canvas.LineTo(805, 552);
  Form1.Canvas.MoveTo(805, 552);
  Form1.Canvas.LineTo(771, 461);
  Form1.Canvas.FloodFill(803, 502, clMaroon, fsBorder);
  Form1.Canvas.Pen.Color := clRed;
  Form1.Canvas.Brush.Color := clRed;
  Form1.Canvas.MoveTo(782, 472);
  Form1.Canvas.LineTo(820, 472);
  Form1.Canvas.MoveTo(820, 472);
  Form1.Canvas.LineTo(806, 539);
  Form1.Canvas.MoveTo(806, 539);
  Form1.Canvas.LineTo(784, 474);
  Form1.Canvas.FloodFill(807, 490, clRed, fsBorder);
  Form1.Canvas.Pen.Color := clYellow;
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.MoveTo(788, 480);
  Form1.Canvas.LineTo(815, 480);
  Form1.Canvas.MoveTo(815, 480);
  Form1.Canvas.LineTo(807, 523);
  Form1.Canvas.MoveTo(807, 523);
  Form1.Canvas.LineTo(789, 480);
  Form1.Canvas.FloodFill(801, 488, clYellow, fsBorder);
  Form1.Canvas.Pen.Color := clBlack;
  Form1.Canvas.Brush.Color := $00C6C7A1;
  Form1.Canvas.FloodFill(723, 276, clBlack, fsBorder);
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Brush.Color := clGreen;
  Form1.Canvas.Pen.Color := clNavy;
  Form1.Canvas.Pen.Color := clPurple;
  Form1.Canvas.Brush.Color := clLime;
  Form1.Canvas.Ellipse(531, 328, 539, 468);
  Form1.Canvas.Ellipse(910, 328, 919, 472);
  Form1.Canvas.Ellipse(563, 310, 891, 397);
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.Ellipse(651, 240, 804, 295);
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.Ellipse(693, 163, 746, 229);
  // копирование коробля в битмап
  bitmap.Canvas.CopyRect(rect(0, 0, 100, 100), Form1.Canvas,
    rect(501, 92, 944, 558));
  // form1.Canvas.CopyRect(rect(0,0,100,100),bitmap.Canvas,rect(0,0,100,100));

  // прорисовка метеорита
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Pen.Color := clGreen;
  Form1.Canvas.Brush.Color := clOlive;
  Form1.Canvas.Pen.Color := $00105156;
  Form1.Canvas.Ellipse(66, 79, 343, 337);
  Form1.Canvas.Brush.Color := $002F9357;
  Form1.Canvas.Brush.Color := clBlack;
  Form1.Canvas.MoveTo(118, 126);
  Form1.Canvas.LineTo(104, 176);
  Form1.Canvas.MoveTo(119, 218);
  Form1.Canvas.LineTo(119, 277);
  Form1.Canvas.MoveTo(171, 119);
  Form1.Canvas.LineTo(148, 177);
  Form1.Canvas.MoveTo(223, 100);
  Form1.Canvas.LineTo(209, 181);
  Form1.Canvas.MoveTo(274, 130);
  Form1.Canvas.LineTo(274, 175);
  Form1.Canvas.MoveTo(311, 160);
  Form1.Canvas.LineTo(325, 230);
  Form1.Canvas.MoveTo(287, 238);
  Form1.Canvas.LineTo(276, 287);
  Form1.Canvas.MoveTo(211, 229);
  Form1.Canvas.LineTo(191, 297);
  Form1.Canvas.MoveTo(135, 210);
  Form1.Canvas.LineTo(163, 273);
  Form1.Canvas.MoveTo(234, 194);
  Form1.Canvas.LineTo(245, 218);
  Form1.Canvas.MoveTo(230, 257);
  Form1.Canvas.LineTo(239, 298);
  Form1.Canvas.Brush.Color := clGreen;
  Form1.Canvas.Ellipse(153, 199, 153, 199);

  // копирование метеорита в битмап
  bitmap.Canvas.CopyRect(rect(0, 101, 100, 200), Form1.Canvas,
    rect(66, 79, 343, 337));
  Refresh;
  // выстрел
  Form1.Canvas.Brush.Color := clGreen;
  Form1.Canvas.Pen.Color := $0000FF80;
  Form1.Canvas.Pen.Width := 20;
  Form1.Canvas.MoveTo(319, 186);
  Form1.Canvas.LineTo(318, 249);
  // копирование выстрела в битмап
  bitmap.Canvas.CopyRect(rect(0, 201, 25, 291), Form1.Canvas,
    rect(307, 174, 332, 263));
  Refresh;

  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Pen.Color := clMaroon;
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.Pen.Color := $000000B7;
  Form1.Canvas.Ellipse(217, 136, 346, 265);
  Form1.Canvas.MoveTo(221, 179);
  Form1.Canvas.LineTo(165, 212);
  Form1.Canvas.MoveTo(165, 213);
  Form1.Canvas.LineTo(218, 225);
  Form1.Canvas.MoveTo(218, 225);
  Form1.Canvas.LineTo(203, 284);
  Form1.Canvas.MoveTo(203, 284);
  Form1.Canvas.LineTo(252, 255);
  Form1.Canvas.MoveTo(252, 255);
  Form1.Canvas.LineTo(284, 307);
  Form1.Canvas.MoveTo(284, 307);
  Form1.Canvas.LineTo(295, 261);
  Form1.Canvas.MoveTo(297, 260);
  Form1.Canvas.LineTo(335, 303);
  Form1.Canvas.MoveTo(336, 304);
  Form1.Canvas.LineTo(347, 227);
  Form1.Canvas.MoveTo(347, 227);
  Form1.Canvas.LineTo(401, 237);
  Form1.Canvas.MoveTo(401, 237);
  Form1.Canvas.LineTo(347, 183);
  Form1.Canvas.MoveTo(347, 183);
  Form1.Canvas.LineTo(432, 179);
  Form1.Canvas.MoveTo(432, 179);
  Form1.Canvas.LineTo(352, 139);
  Form1.Canvas.MoveTo(352, 139);
  Form1.Canvas.LineTo(398, 99);
  Form1.Canvas.MoveTo(396, 98);
  Form1.Canvas.LineTo(328, 113);
  Form1.Canvas.MoveTo(328, 113);
  Form1.Canvas.LineTo(276, 73);
  Form1.Canvas.MoveTo(276, 73);
  Form1.Canvas.LineTo(256, 121);
  Form1.Canvas.MoveTo(256, 121);
  Form1.Canvas.LineTo(209, 97);
  Form1.Canvas.MoveTo(209, 97);
  Form1.Canvas.LineTo(214, 177);
  Form1.Canvas.Brush.Color := clRed;
  Form1.Canvas.FloodFill(309, 116, $000000B7, fsBorder);
  Form1.Canvas.FloodFill(356, 216, $000000B7, fsBorder);
  Form1.Canvas.FloodFill(330, 255, $000000B7, fsBorder);
  Form1.Canvas.FloodFill(279, 279, $000000B7, fsBorder);
  Form1.Canvas.FloodFill(217, 256, $000000B7, fsBorder);
  Form1.Canvas.FloodFill(201, 208, $000000B7, fsBorder);

  bitmap.Canvas.CopyRect(rect(0, 300, 100, 400), Form1.Canvas,
    rect(162, 71, 440, 311));

  Refresh;
  // корабль 2 уровень
  Form1.Canvas.Pen.Color := clBlack;
  Form1.Canvas.Brush.Color := clBtnFace;
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.MoveTo(515, 501);
  Form1.Canvas.LineTo(514, 335);
  Form1.Canvas.MoveTo(514, 335);
  Form1.Canvas.LineTo(550, 291);
  Form1.Canvas.MoveTo(550, 291);
  Form1.Canvas.LineTo(591, 290);
  Form1.Canvas.MoveTo(591, 290);
  Form1.Canvas.LineTo(610, 265);
  Form1.Canvas.MoveTo(610, 265);
  Form1.Canvas.LineTo(625, 264);
  Form1.Canvas.MoveTo(625, 264);
  Form1.Canvas.LineTo(656, 220);
  Form1.Canvas.MoveTo(656, 220);
  Form1.Canvas.LineTo(657, 204);
  Form1.Canvas.MoveTo(657, 204);
  Form1.Canvas.LineTo(681, 180);
  Form1.Canvas.MoveTo(681, 180);
  Form1.Canvas.LineTo(682, 179);
  Form1.Canvas.MoveTo(681, 178);
  Form1.Canvas.LineTo(681, 143);
  Form1.Canvas.MoveTo(681, 143);
  Form1.Canvas.LineTo(722, 98);
  Form1.Canvas.MoveTo(722, 98);
  Form1.Canvas.LineTo(766, 144);
  Form1.Canvas.MoveTo(766, 144);
  Form1.Canvas.LineTo(765, 182);
  Form1.Canvas.MoveTo(765, 182);
  Form1.Canvas.LineTo(791, 206);
  Form1.Canvas.MoveTo(791, 206);
  Form1.Canvas.LineTo(791, 227);
  Form1.Canvas.MoveTo(791, 227);
  Form1.Canvas.LineTo(825, 268);
  Form1.Canvas.MoveTo(825, 268);
  Form1.Canvas.LineTo(839, 267);
  Form1.Canvas.MoveTo(839, 267);
  Form1.Canvas.LineTo(856, 295);
  Form1.Canvas.MoveTo(856, 295);
  Form1.Canvas.LineTo(900, 294);
  Form1.Canvas.MoveTo(900, 294);
  Form1.Canvas.LineTo(932, 338);
  Form1.Canvas.MoveTo(932, 338);
  Form1.Canvas.LineTo(933, 501);
  Form1.Canvas.MoveTo(931, 482);
  Form1.Canvas.LineTo(903, 481);
  Form1.Canvas.MoveTo(903, 481);
  Form1.Canvas.LineTo(872, 410);
  Form1.Canvas.MoveTo(872, 410);
  Form1.Canvas.LineTo(831, 410);
  Form1.Canvas.MoveTo(831, 410);
  Form1.Canvas.LineTo(820, 425);
  Form1.Canvas.MoveTo(820, 425);
  Form1.Canvas.LineTo(777, 425);
  Form1.Canvas.MoveTo(777, 425);
  Form1.Canvas.LineTo(768, 410);
  Form1.Canvas.MoveTo(768, 410);
  Form1.Canvas.LineTo(754, 411);
  Form1.Canvas.MoveTo(754, 411);
  Form1.Canvas.LineTo(732, 440);
  Form1.Canvas.MoveTo(732, 440);
  Form1.Canvas.LineTo(719, 439);
  Form1.Canvas.MoveTo(719, 439);
  Form1.Canvas.LineTo(695, 413);
  Form1.Canvas.MoveTo(695, 413);
  Form1.Canvas.LineTo(679, 413);
  Form1.Canvas.MoveTo(679, 413);
  Form1.Canvas.LineTo(664, 427);
  Form1.Canvas.MoveTo(664, 427);
  Form1.Canvas.LineTo(623, 427);
  Form1.Canvas.MoveTo(623, 427);
  Form1.Canvas.LineTo(611, 411);
  Form1.Canvas.MoveTo(611, 411);
  Form1.Canvas.LineTo(575, 412);
  Form1.Canvas.MoveTo(575, 412);
  Form1.Canvas.LineTo(541, 483);
  Form1.Canvas.MoveTo(541, 483);
  Form1.Canvas.LineTo(520, 483);
  Form1.Canvas.Brush.Color := clBlack;
  Form1.Canvas.Rectangle(629, 424, 664, 485);
  Form1.Canvas.Rectangle(784, 427, 819, 480);
  Form1.Canvas.Pen.Width := 5;
  Form1.Canvas.Pen.Color := clMaroon;
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.MoveTo(618, 463);
  Form1.Canvas.LineTo(677, 463);
  Form1.Canvas.MoveTo(677, 463);
  Form1.Canvas.LineTo(655, 553);
  Form1.Canvas.MoveTo(655, 553);
  Form1.Canvas.LineTo(619, 464);
  Form1.Canvas.FloodFill(646, 491, clMaroon, fsBorder);
  Form1.Canvas.Pen.Color := clRed;
  Form1.Canvas.Brush.Color := clRed;
  Form1.Canvas.MoveTo(630, 472);
  Form1.Canvas.LineTo(668, 472);
  Form1.Canvas.MoveTo(668, 472);
  Form1.Canvas.LineTo(655, 537);
  Form1.Canvas.MoveTo(655, 537);
  Form1.Canvas.LineTo(631, 472);
  Form1.Canvas.FloodFill(648, 493, clRed, fsBorder);
  Form1.Canvas.Pen.Color := clYellow;
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.MoveTo(638, 478);
  Form1.Canvas.LineTo(661, 478);
  Form1.Canvas.MoveTo(661, 478);
  Form1.Canvas.LineTo(655, 514);
  Form1.Canvas.MoveTo(655, 514);
  Form1.Canvas.LineTo(639, 479);
  Form1.Canvas.FloodFill(654, 489, clYellow, fsBorder);
  Form1.Canvas.Pen.Color := clMaroon;
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.MoveTo(772, 461);
  Form1.Canvas.LineTo(830, 461);
  Form1.Canvas.MoveTo(830, 461);
  Form1.Canvas.LineTo(805, 552);
  Form1.Canvas.MoveTo(805, 552);
  Form1.Canvas.LineTo(771, 461);
  Form1.Canvas.FloodFill(803, 502, clMaroon, fsBorder);
  Form1.Canvas.Pen.Color := clRed;
  Form1.Canvas.Brush.Color := clRed;
  Form1.Canvas.MoveTo(782, 472);
  Form1.Canvas.LineTo(820, 472);
  Form1.Canvas.MoveTo(820, 472);
  Form1.Canvas.LineTo(806, 539);
  Form1.Canvas.MoveTo(806, 539);
  Form1.Canvas.LineTo(784, 474);
  Form1.Canvas.FloodFill(807, 490, clRed, fsBorder);
  Form1.Canvas.Pen.Color := clYellow;
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.MoveTo(788, 480);
  Form1.Canvas.LineTo(815, 480);
  Form1.Canvas.MoveTo(815, 480);
  Form1.Canvas.LineTo(807, 523);
  Form1.Canvas.MoveTo(807, 523);
  Form1.Canvas.LineTo(789, 480);
  Form1.Canvas.FloodFill(801, 488, clYellow, fsBorder);
  Form1.Canvas.Pen.Color := clBlack;
  Form1.Canvas.Brush.Color := $00C6C7A1;
  Form1.Canvas.FloodFill(723, 276, clBlack, fsBorder);
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Brush.Color := clGreen;
  Form1.Canvas.Pen.Color := clNavy;
  Form1.Canvas.Pen.Color := clPurple;
  Form1.Canvas.Brush.Color := clLime;
  Form1.Canvas.Ellipse(531, 328, 539, 468);
  Form1.Canvas.Ellipse(910, 328, 919, 472);
  Form1.Canvas.Ellipse(563, 310, 891, 397);
  Form1.Canvas.Brush.Color := clYellow;
  Form1.Canvas.Ellipse(651, 240, 804, 295);
  Form1.Canvas.Brush.Color := clMaroon;
  Form1.Canvas.Ellipse(693, 163, 746, 229);
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Pen.Color := clBlack;
  Form1.Canvas.MoveTo(547, 292);
  Form1.Canvas.LineTo(547, 211);
  Form1.Canvas.MoveTo(547, 211);
  Form1.Canvas.LineTo(590, 210);
  Form1.Canvas.MoveTo(590, 210);
  Form1.Canvas.LineTo(589, 286);
  Form1.Canvas.MoveTo(903, 294);
  Form1.Canvas.LineTo(903, 214);
  Form1.Canvas.MoveTo(903, 214);
  Form1.Canvas.LineTo(856, 214);
  Form1.Canvas.MoveTo(856, 214);
  Form1.Canvas.LineTo(856, 292);
  Form1.Canvas.Brush.Color := $00525252;
  Form1.Canvas.FloodFill(557, 250, clBlack, fsBorder);
  Form1.Canvas.FloodFill(876, 262, clBlack, fsBorder);
  Form1.Canvas.Pen.Color := $00525252;
  Form1.Canvas.Rectangle(557, 280, 581, 292);
  Form1.Canvas.Pen.Width := 1;
  Form1.Canvas.Rectangle(861, 287, 898, 300);
  Form1.Canvas.Pen.Width := 10;
  Form1.Canvas.Pen.Color := clPurple;

  bitmap.Canvas.CopyRect(rect(0, 400, 100, 500), Form1.Canvas,
    rect(501, 92, 944, 558));
  // form1.Canvas.CopyRect(rect(0,0,screen.Width,screen.Height),bitmap.Canvas,rect(0,0,screen.Width,screen.Height));
end;

end.
